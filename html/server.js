// npm install sqlite3 express body-parser

// https://expressjs.com/zh-cn/4x/api.html
// https://github.com/mapbox/node-sqlite3

const express = require('express');
const bodyParser = require('body-parser');
const sqlite3 = require('sqlite3');
const db = new sqlite3.Database("notes_notepad.db");

function htmlEscape(str) {
    return str
        .replace(/&/g, '&amp;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#39;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;');
}

// I needed the opposite function today, so adding here too:
function htmlUnescape(str) {
    return str
        .replace(/&quot;/g, '"')
        .replace(/&#39;/g, "'")
        .replace(/&lt;/g, '<')
        .replace(/&gt;/g, '>')
        .replace(/&amp;/g, '&');
}

const createDatabase = (callback) => {
    db.run("CREATE TABLE IF NOT EXISTS note (\n" +
        "    _id INTEGER PRIMARY KEY AUTOINCREMENT,\n" +
        "    title VARCHAR(50) NOT NULL,\n" +
        "    content TEXT NOT NULL,\n" +

        "    created_at BIGINT NOT NULL,\n" +
        "    updated_at BIGINT NOT NULL,\n" +
        "    UNIQUE (created_at)\n" +
        ");",
        callback
    )
};
const insertDatabase = (obj, callback) => {
    db.serialize(() => {
        var s = db.prepare("INSERT INTO note VALUES(null,?,?,?,?)");
        s.run(obj['title'], obj['content'], new Date().getMilliseconds(), new Date().getMilliseconds());
        s.finalize();
        db.get("SELECT last_insert_rowid()", callback);
    });
}
const updateDatabase = (obj, callback) => {
    db.serialize(() => {
        var s = db.prepare("UPDATE note SET title=?,content=? where _id=?");
        s.run(obj['title'], obj['content'], obj['id']);
        s.finalize();
        callback();
    });
}
const queryRecords = (callback) => {
    db.all("select _id,title from note order by updated_at desc", callback);
}
const queryRecord = (id, callback) => {
    db.get("select _id,title,content from note where _id = ?", id, callback);
}
const app = express();
app.use(express.static("."));
app.use(bodyParser.json()); // for parsing application/json
app.use(bodyParser.urlencoded({
    extended: true
})); // for parsing application/x-www-form-urlencoded
const buffer = [
    [
        60, 33, 68, 79, 67, 84, 89, 80, 69, 32, 104, 116, 109, 108, 62,
        60, 104, 116, 109, 108, 32, 108, 97, 110, 103, 61, 34, 101, 110, 34,
        62, 60, 104, 101, 97, 100, 62, 60, 109, 101, 116, 97, 32, 99, 104,
        97, 114, 115, 101, 116, 61, 34, 85, 84, 70, 45, 56, 34, 47, 62,
        60, 109, 101, 116, 97, 32, 110, 97, 109, 101, 61, 34, 118, 105, 101,
        119, 112, 111, 114, 116, 34, 32, 99, 111, 110, 116, 101, 110, 116, 61,
        34, 119, 105, 100, 116, 104, 61, 100, 101, 118, 105, 99, 101, 45, 119,
        105, 100, 116, 104, 44, 32, 105, 110, 105, 116, 105, 97, 108, 45, 115,
        99, 97, 108, 101, 61, 49, 46, 48, 34, 47, 62, 60, 109, 101, 116,
        97, 32, 104, 116, 116, 112, 45, 101, 113, 117, 105, 118, 61, 34, 88,
        45, 85, 65, 45, 67, 111, 109, 112, 97, 116, 105, 98, 108, 101, 34,
        32, 99, 111, 110, 116, 101, 110, 116, 61, 34, 105, 101, 61, 101, 100,
        103, 101, 34, 47, 62, 60, 116, 105, 116, 108, 101, 62, 68, 111, 99,
        117, 109, 101, 110, 116, 60, 47, 116, 105, 116, 108, 101, 62, 60, 108,
        105, 110, 107, 32, 114, 101, 108, 61, 34, 115, 116, 121, 108, 101, 115,
        104, 101, 101, 116, 34, 32, 104, 114, 101, 102, 61, 34, 114, 101, 115,
        101, 116, 46, 99, 115, 115, 34, 47, 62, 60, 108, 105, 110, 107, 32,
        114, 101, 108, 61, 34, 115, 116, 121, 108, 101, 115, 104, 101, 101, 116,
        34, 32, 104, 114, 101, 102, 61, 34, 108, 97, 121, 111, 117, 116, 46,
        99, 115, 115, 34, 47, 62, 60, 108, 105, 110, 107, 32, 114, 101, 108,
        61, 34, 115, 116, 121, 108, 101, 115, 104, 101, 101, 116, 34, 32, 104,
        114, 101, 102, 61, 34, 116, 111, 97, 115, 116, 46, 99, 115, 115, 34,
        47, 62, 60, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 115, 116,
        121, 108, 101, 115, 104, 101, 101, 116, 34, 32, 104, 114, 101, 102, 61,
        34, 104, 116, 116, 112, 115, 58, 47, 47, 99, 100, 110, 106, 115, 46,
        99, 108, 111, 117, 100, 102, 108, 97, 114, 101, 46, 99, 111, 109, 47,
        97, 106, 97, 120, 47, 108, 105, 98, 115, 47, 115, 105, 109, 112, 108,
        101, 109, 100, 101, 47, 49, 46, 49, 49, 46, 50, 47, 115, 105, 109,
        112, 108, 101, 109, 100, 101, 46, 109, 105, 110, 46, 99, 115, 115, 34,
        47, 62, 60, 108, 105, 110, 107, 32, 114, 101, 108, 61, 34, 115, 116,
        121, 108, 101, 115, 104, 101, 101, 116, 34, 32, 104, 114, 101, 102, 61,
        34, 104, 116, 116, 112, 115, 58, 47, 47, 99, 100, 110, 46, 106, 115,
        100, 101, 108, 105, 118, 114, 46, 110, 101, 116, 47, 110, 112, 109, 47,
        116, 111, 97, 115, 116, 105, 102, 121, 45, 106, 115, 47, 115, 114, 99,
        47, 116, 111, 97, 115, 116, 105, 102, 121, 46, 109, 105, 110, 46, 99,
        115, 115, 34, 47, 62, 60, 115, 99, 114, 105, 112, 116, 32, 115, 114,
        99, 61, 34, 104, 116, 116, 112, 115, 58, 47, 47, 99, 100, 110, 106,
        115, 46, 99, 108, 111, 117, 100, 102, 108, 97, 114, 101, 46, 99, 111,
        109, 47, 97, 106, 97, 120, 47, 108, 105, 98, 115, 47, 115, 105, 109,
        112, 108, 101, 109, 100, 101, 47, 49, 46, 49, 49, 46, 50, 47, 115,
        105, 109, 112, 108, 101, 109, 100, 101, 46, 109, 105, 110, 46, 106, 115,
        34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62, 60, 98, 111, 100,
        121, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 119,
        114, 97, 112, 112, 101, 114, 34, 62, 60, 115, 101, 99, 116, 105, 111,
        110, 32, 99, 108, 97, 115, 115, 61, 34, 112, 97, 110, 101, 108, 32,
        95, 110, 97, 118, 34, 62, 60, 104, 101, 97, 100, 101, 114, 32, 99,
        108, 97, 115, 115, 61, 34, 112, 97, 110, 101, 108, 95, 95, 104, 101,
        97, 100, 101, 114, 34, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115,
        115, 61, 34, 99, 111, 110, 116, 97, 105, 110, 101, 114, 34, 62, 60,
        102, 111, 114, 109, 32, 99, 108, 97, 115, 115, 61, 34, 115, 101, 97,
        114, 99, 104, 45, 98, 111, 120, 34, 62, 60, 108, 97, 98, 101, 108,
        32, 102, 111, 114, 61, 34, 115, 101, 97, 114, 99, 104, 45, 98, 111,
        120, 95, 95, 105, 110, 112, 117, 116, 34, 32, 99, 108, 97, 115, 115,
        61, 34, 115, 101, 97, 114, 99, 104, 45, 98, 111, 120, 95, 95, 108,
        97, 98, 101, 108, 34, 62, 60, 47, 108, 97, 98, 101, 108, 62, 32,
        60, 105, 110, 112, 117, 116, 32, 116, 121, 112, 101, 61, 34, 116, 101,
        120, 116, 34, 32, 99, 108, 97, 115, 115, 61, 34, 115, 101, 97, 114,
        99, 104, 45, 98, 111, 120, 95, 95, 105, 110, 112, 117, 116, 34, 47,
        62, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 115, 101,
        97, 114, 99, 104, 45, 98, 111, 120, 95, 95, 99, 108, 101, 97, 114,
        34, 32, 116, 105, 116, 108, 101, 61, 34, 67, 108, 101, 97, 114, 34,
        62, 60, 47, 100, 105, 118, 62, 60, 47, 102, 111, 114, 109, 62, 60,
        47, 100, 105, 118, 62, 60, 47, 104, 101, 97, 100, 101, 114, 62, 60,
        110, 97, 118, 32, 99, 108, 97, 115, 115, 61, 34, 112, 97, 110, 101,
        108, 95, 95, 99, 111, 110, 116, 101, 110, 116, 34, 62, 60, 100, 105,
        118, 32, 99, 108, 97, 115, 115, 61, 34, 99, 111, 110, 116, 97, 105,
        110, 101, 114, 32, 95, 110, 97, 118, 34, 62, 60, 109, 101, 110, 117,
        32, 99, 108, 97, 115, 115, 61, 34, 110, 97, 118, 45, 116, 114, 101,
        101, 34, 62, 60, 117, 108, 32, 99, 108, 97, 115, 115, 61, 34, 110,
        97, 118, 45, 116, 114, 101, 101, 95, 95, 108, 105, 115, 116, 34, 62
    ],
    [
        60, 47, 117, 108, 62, 60, 47, 109, 101, 110, 117, 62, 60, 47, 100,
        105, 118, 62, 60, 47, 110, 97, 118, 62, 60, 47, 115, 101, 99, 116,
        105, 111, 110, 62, 60, 109, 97, 105, 110, 32, 99, 108, 97, 115, 115,
        61, 34, 112, 97, 110, 101, 108, 32, 95, 109, 97, 105, 110, 32, 95,
        119, 105, 116, 104, 111, 117, 116, 45, 115, 105, 100, 101, 98, 108, 111,
        99, 107, 34, 62, 60, 104, 101, 97, 100, 101, 114, 32, 99, 108, 97,
        115, 115, 61, 34, 112, 97, 110, 101, 108, 95, 95, 104, 101, 97, 100,
        101, 114, 32, 104, 101, 97, 100, 101, 114, 32, 95, 102, 105, 120, 101,
        100, 32, 95, 99, 108, 97, 109, 112, 101, 100, 34, 62, 60, 100, 105,
        118, 32, 99, 108, 97, 115, 115, 61, 34, 99, 111, 110, 116, 97, 105,
        110, 101, 114, 32, 104, 101, 97, 100, 101, 114, 95, 95, 99, 111, 110,
        116, 97, 105, 110, 101, 114, 34, 62, 60, 100, 105, 118, 32, 99, 108,
        97, 115, 115, 61, 34, 104, 101, 97, 100, 101, 114, 95, 95, 116, 105,
        116, 108, 101, 34, 62, 60, 104, 51, 32, 105, 100, 61, 34, 116, 105,
        116, 108, 101, 34, 62, 60, 47, 104, 51, 62, 60, 100, 105, 118, 32,
        99, 108, 97, 115, 115, 61, 34, 112, 97, 110, 101, 108, 45, 116, 114,
        105, 103, 103, 101, 114, 34, 62, 60, 47, 100, 105, 118, 62, 60, 47,
        100, 105, 118, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61,
        34, 104, 101, 97, 100, 101, 114, 95, 95, 99, 111, 110, 116, 114, 111,
        108, 115, 34, 62, 60, 47, 100, 105, 118, 62, 60, 47, 100, 105, 118,
        62, 60, 47, 104, 101, 97, 100, 101, 114, 62, 60, 100, 105, 118, 32,
        99, 108, 97, 115, 115, 61, 34, 112, 97, 110, 101, 108, 95, 95, 104,
        101, 97, 100, 101, 114, 32, 104, 101, 97, 100, 101, 114, 32, 95, 101,
        109, 117, 108, 97, 116, 111, 114, 34, 32, 115, 116, 121, 108, 101, 61,
        34, 104, 101, 105, 103, 104, 116, 58, 50, 50, 112, 120, 34, 62, 60,
        47, 100, 105, 118, 62, 60, 115, 101, 99, 116, 105, 111, 110, 32, 99,
        108, 97, 115, 115, 61, 34, 112, 97, 110, 101, 108, 95, 95, 99, 111,
        110, 116, 101, 110, 116, 34, 62, 60, 116, 101, 120, 116, 97, 114, 101,
        97, 32, 105, 100, 61, 34, 101, 100, 105, 116, 45, 116, 101, 120, 116,
        34, 62, 60, 47, 116, 101, 120, 116, 97, 114, 101, 97, 62, 60, 47,
        115, 101, 99, 116, 105, 111, 110, 62, 60, 47, 109, 97, 105, 110, 62,
        60, 47, 100, 105, 118, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115,
        115, 61, 34, 116, 111, 97, 115, 116, 95, 95, 108, 97, 121, 111, 117,
        116, 32, 116, 111, 97, 115, 116, 45, 45, 104, 105, 100, 100, 101, 110,
        34, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 116,
        111, 97, 115, 116, 95, 95, 99, 111, 110, 116, 97, 105, 110, 101, 114,
        34, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 116,
        111, 97, 115, 116, 95, 95, 99, 101, 108, 108, 34, 62, 60, 100, 105,
        118, 32, 99, 108, 97, 115, 115, 61, 34, 116, 111, 97, 115, 116, 32,
        116, 111, 97, 115, 116, 45, 45, 121, 101, 108, 108, 111, 119, 32, 97,
        100, 100, 45, 109, 97, 114, 103, 105, 110, 34, 62, 60, 100, 105, 118,
        32, 99, 108, 97, 115, 115, 61, 34, 116, 111, 97, 115, 116, 95, 95,
        105, 99, 111, 110, 34, 62, 60, 115, 118, 103, 32, 118, 101, 114, 115,
        105, 111, 110, 61, 34, 49, 46, 49, 34, 32, 99, 108, 97, 115, 115,
        61, 34, 116, 111, 97, 115, 116, 95, 95, 115, 118, 103, 34, 32, 120,
        109, 108, 110, 115, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119,
        119, 46, 119, 51, 46, 111, 114, 103, 47, 50, 48, 48, 48, 47, 115,
        118, 103, 34, 32, 120, 109, 108, 110, 115, 58, 120, 108, 105, 110, 107,
        61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 119, 51,
        46, 111, 114, 103, 47, 49, 57, 57, 57, 47, 120, 108, 105, 110, 107,
        34, 32, 120, 61, 34, 48, 112, 120, 34, 32, 121, 61, 34, 48, 112,
        120, 34, 32, 118, 105, 101, 119, 66, 111, 120, 61, 34, 48, 32, 48,
        32, 51, 48, 49, 46, 54, 57, 49, 32, 51, 48, 49, 46, 54, 57,
        49, 34, 32, 115, 116, 121, 108, 101, 61, 34, 101, 110, 97, 98, 108,
        101, 45, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 58, 110, 101,
        119, 32, 48, 32, 48, 32, 51, 48, 49, 46, 54, 57, 49, 32, 51,
        48, 49, 46, 54, 57, 49, 34, 32, 120, 109, 108, 58, 115, 112, 97,
        99, 101, 61, 34, 112, 114, 101, 115, 101, 114, 118, 101, 34, 62, 60,
        103, 62, 60, 112, 111, 108, 121, 103, 111, 110, 32, 112, 111, 105, 110,
        116, 115, 61, 34, 49, 49, 57, 46, 49, 53, 49, 44, 48, 32, 49,
        50, 57, 46, 54, 44, 50, 49, 56, 46, 52, 48, 54, 32, 49, 55,
        50, 46, 48, 54, 44, 50, 49, 56, 46, 52, 48, 54, 32, 49, 56,
        50, 46, 53, 52, 44, 48, 32, 32, 34, 62, 60, 47, 112, 111, 108,
        121, 103, 111, 110, 62, 60, 114, 101, 99, 116, 32, 120, 61, 34, 49,
        51, 48, 46, 53, 54, 51, 34, 32, 121, 61, 34, 50, 54, 49, 46,
        49, 54, 56, 34, 32, 119, 105, 100, 116, 104, 61, 34, 52, 48, 46,
        53, 50, 53, 34, 32, 104, 101, 105, 103, 104, 116, 61, 34, 52, 48,
        46, 53, 50, 51, 34, 62, 60, 47, 114, 101, 99, 116, 62, 60, 47,
        103, 62, 60, 47, 115, 118, 103, 62, 60, 47, 100, 105, 118, 62, 60,
        100, 105, 118, 32, 99, 108, 97, 115, 115, 61, 34, 116, 111, 97, 115,
        116, 95, 95, 99, 111, 110, 116, 101, 110, 116, 34, 62, 60, 112, 32,
        99, 108, 97, 115, 115, 61, 34, 116, 111, 97, 115, 116, 95, 95, 116,
        121, 112, 101, 34, 62, 83, 117, 99, 99, 101, 115, 115, 60, 112, 32,
        99, 108, 97, 115, 115, 61, 34, 116, 111, 97, 115, 116, 95, 95, 109,
        101, 115, 115, 97, 103, 101, 34, 62, 65, 110, 121, 111, 110, 101, 32,
        119, 105, 116, 104, 32, 97, 99, 99, 101, 115, 115, 32, 99, 97, 110,
        32, 118, 105, 101, 119, 32, 121, 111, 117, 114, 32, 105, 110, 118, 105,
        116, 101, 100, 32, 118, 105, 115, 105, 116, 111, 114, 115, 46, 60, 47,
        100, 105, 118, 62, 60, 100, 105, 118, 32, 99, 108, 97, 115, 115, 61,
        34, 116, 111, 97, 115, 116, 95, 95, 99, 108, 111, 115, 101, 34, 62,
        60, 115, 118, 103, 32, 118, 101, 114, 115, 105, 111, 110, 61, 34, 49,
        46, 49, 34, 32, 120, 109, 108, 110, 115, 61, 34, 104, 116, 116, 112,
        58, 47, 47, 119, 119, 119, 46, 119, 51, 46, 111, 114, 103, 47, 50,
        48, 48, 48, 47, 115, 118, 103, 34, 32, 118, 105, 101, 119, 66, 111,
        120, 61, 34, 48, 32, 48, 32, 49, 53, 46, 54, 52, 50, 32, 49,
        53, 46, 54, 52, 50, 34, 32, 120, 109, 108, 110, 115, 58, 120, 108,
        105, 110, 107, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119,
        46, 119, 51, 46, 111, 114, 103, 47, 49, 57, 57, 57, 47, 120, 108,
        105, 110, 107, 34, 32, 101, 110, 97, 98, 108, 101, 45, 98, 97, 99,
        107, 103, 114, 111, 117, 110, 100, 61, 34, 110, 101, 119, 32, 48, 32,
        48, 32, 49, 53, 46, 54, 52, 50, 32, 49, 53, 46, 54, 52, 50,
        34, 62, 60, 112, 97, 116, 104, 32, 102, 105, 108, 108, 45, 114, 117,
        108, 101, 61, 34, 101, 118, 101, 110, 111, 100, 100, 34, 32, 100, 61,
        34, 77, 56, 46, 56, 56, 50, 44, 55, 46, 56, 50, 49, 108, 54,
        46, 53, 52, 49, 45, 54, 46, 53, 52, 49, 99, 48, 46, 50, 57,
        51, 45, 48, 46, 50, 57, 51, 44, 48, 46, 50, 57, 51, 45, 48,
        46, 55, 54, 56, 44, 48, 45, 49, 46, 48, 54, 49, 32, 32, 99,
        45, 48, 46, 50, 57, 51, 45, 48, 46, 50, 57, 51, 45, 48, 46,
        55, 54, 56, 45, 48, 46, 50, 57, 51, 45, 49, 46, 48, 54, 49,
        44, 48, 76, 55, 46, 56, 50, 49, 44, 54, 46, 55, 54, 76, 49,
        46, 50, 56, 44, 48, 46, 50, 50, 99, 45, 48, 46, 50, 57, 51,
        45, 48, 46, 50, 57, 51, 45, 48, 46, 55, 54, 56, 45, 48, 46,
        50, 57, 51, 45, 49, 46, 48, 54, 49, 44, 48, 99, 45, 48, 46,
        50, 57, 51, 44, 48, 46, 50, 57, 51, 45, 48, 46, 50, 57, 51,
        44, 48, 46, 55, 54, 56, 44, 48, 44, 49, 46, 48, 54, 49, 32,
        32, 108, 54, 46, 53, 52, 49, 44, 54, 46, 53, 52, 49, 76, 48,
        46, 50, 50, 44, 49, 52, 46, 51, 54, 50, 99, 45, 48, 46, 50,
        57, 51, 44, 48, 46, 50, 57, 51, 45, 48, 46, 50, 57, 51, 44,
        48, 46, 55, 54, 56, 44, 48, 44, 49, 46, 48, 54, 49, 99, 48,
        46, 49, 52, 55, 44, 48, 46, 49, 52, 54, 44, 48, 46, 51, 51,
        56, 44, 48, 46, 50, 50, 44, 48, 46, 53, 51, 44, 48, 46, 50,
        50, 115, 48, 46, 51, 56, 52, 45, 48, 46, 48, 55, 51, 44, 48,
        46, 53, 51, 45, 48, 46, 50, 50, 108, 54, 46, 53, 52, 49, 45,
        54, 46, 53, 52, 49, 32, 32, 108, 54, 46, 53, 52, 49, 44, 54,
        46, 53, 52, 49, 99, 48, 46, 49, 52, 55, 44, 48, 46, 49, 52,
        54, 44, 48, 46, 51, 51, 56, 44, 48, 46, 50, 50, 44, 48, 46,
        53, 51, 44, 48, 46, 50, 50, 99, 48, 46, 49, 57, 50, 44, 48,
        44, 48, 46, 51, 56, 52, 45, 48, 46, 48, 55, 51, 44, 48, 46,
        53, 51, 45, 48, 46, 50, 50, 99, 48, 46, 50, 57, 51, 45, 48,
        46, 50, 57, 51, 44, 48, 46, 50, 57, 51, 45, 48, 46, 55, 54,
        56, 44, 48, 45, 49, 46, 48, 54, 49, 76, 56, 46, 56, 56, 50,
        44, 55, 46, 56, 50, 49, 122, 34, 62, 60, 47, 112, 97, 116, 104,
        62, 60, 47, 115, 118, 103, 62, 60, 47, 100, 105, 118, 62, 60, 47,
        100, 105, 118, 62, 60, 47, 100, 105, 118, 62, 60, 47, 100, 105, 118,
        62, 60, 47, 100, 105, 118, 62, 60, 115, 99, 114, 105, 112, 116, 32,
        115, 114, 99, 61, 34, 97, 112, 112, 46, 106, 115, 34, 62, 60, 47,
        115, 99, 114, 105, 112, 116, 62, 60, 115, 99, 114, 105, 112, 116, 32,
        115, 114, 99, 61, 34, 116, 111, 97, 115, 116, 46, 106, 115, 34, 62,
        60, 47, 115, 99, 114, 105, 112, 116, 62, 60, 115, 99, 114, 105, 112,
        116, 32, 115, 114, 99, 61, 34, 101, 100, 105, 116, 111, 114, 46, 106,
        115, 34, 62, 60, 47, 115, 99, 114, 105, 112, 116, 62

    ]
];

app.get("/", function (req, res) {
    queryRecords((err, rows) => {
        if (err) {
            res.status(500).send(err + ' ');
            return;
        }
        res.setHeader("Content-Type", "text/html");
        res.status(200);
        //res.status(200);
        res.write(Buffer.from(buffer[0]));
        for (let row of rows) {
            res.write(` <li class="nav-tree__item"><a class="nav-tree__link" href="#${row['_id']}">${htmlEscape(row['title'])}</a></li>`)
        }
        res.write(Buffer.from(buffer[1]));
        res.end();
    })
});
app.post("/api/update", (req, res) => {
    try {
        let obj = req.body;
        if (obj['id'] == -1) {
            insertDatabase(obj, (err, lastInsertId) => {
                if (err) res.status(500).send(err + ' ');
                else res.status(200).send({
                    "id": lastInsertId['last_insert_rowid()']
                });
            })
        } else {
            updateDatabase(obj, (err, lastInsertId) => {
                if (err) res.status(500).send(err + ' ');
                else res.status(200).send({
                    "id": obj['id']
                });
            })
        }
    } catch (e) {
        console.log(e);
        res.status(500).end();
    }

})
app.post("/api/get/:id", (req, res) => {
    try {

        queryRecord(req.params.id, (err, data) => {
            console.log(data);
            if (err) res.status(500).send(err + ' ');
            else res.status(200).json(data);
        })
    } catch (e) {
        console.log(e);
        res.status(500).end();
    }

})

createDatabase(error => {
    if (error == null) {
        app.listen(8090);
        console.log("Server start at: http://localhost:8090");
    }
});